(Музика) Ласкаво просимо до вступу до GitHub Після перегляду цього відео ви зможете: описати призначення вихідних сховищ та пояснити, як GitHub задовольняє потреби сховища джерел. Розробка Linux на початку 2000-х років здійснювалася за допомогою безкоштовної системи, відомої як BitKeeper. У 2005 році BitKeeper перейшов на платну систему, яка була проблематичною для розробників Linux з багатьох причин. Лінус Торвальдс очолив команду для розробки системи управління заміною вихідно-версії. Проект пройшов за короткий проміжок часу, і ключові характеристики були визначені невеликою групою. До них відносяться: Сильна підтримка нелінійного розвитку. (Виправлення Linux тоді надходили зі швидкістю 6,7 патчів в секунду) Розподілена розробка. Кожен розробник може мати локальну копію повної історії розвитку. Сумісність з існуючими системами і протоколами. Це було необхідно, щоб визнати різноманітність спільноти Linux. Ефективна обробка великих проектів. Криптографічна автентифікація історії. Це означає, що всі розподілені системи мають однакові оновлення коду. Стратегії злиття, що підключаються. Багато шляхів розвитку можуть призвести до складних інтеграційних рішень, які можуть вимагати чітких стратегій інтеграції. Що особливого в моделі Git Repository? Git розроблений як розподілена система контролю версій. В першу чергу орієнтована на відстеження вихідного коду під час розробки. Містить елементи для координації між програмістами, відстеження змін та підтримки нелінійних робочих процесів. Створено в 2005 році Лінусом Торвальдсом для дистрибуції ядер Linux. Git — розподілена система контролю версій, яка використовується для відстеження змін у контенті. Він служить центральним пунктом співпраці з особливим акцентом на методології гнучкої розробки. У центральній системі контролю версій кожен розробник повинен перевірити код з центральної системи та знову ввійти в нього. Оскільки Git є розподіленим контролем версій, кожен розробник має локальну копію повної історії розробки, а зміни копіюються з одного такого сховища в інший. Кожен розробник може виступати в якості хаба. Якщо Git використовується правильно, існує основна гілка, яка відповідає коду, який можна розгорнути. Команди можуть постійно інтегрувати зміни, які готові до випуску, і можуть одночасно працювати над окремими гілками між випусками. Git також дозволяє централізовано адмініструвати завдання з контролем рівня доступу для кожної команди. Git може співіснувати локально, наприклад, через клієнт GitHub Desktop, або його можна використовувати безпосередньо через браузер, підключений до веб-інтерфейсу GitHub. IBM Cloud базується на надійних та усталених інструментах з відкритим кодом, включаючи сховища Git, які часто називають репозиторіями. GitHub - це онлайн-хостинг для сховищ Git. GitHub розміщений дочірньою компанією Microsoft. GitHub пропонує безкоштовні, професійні та корпоративні облікові записи. Станом на серпень 2019 року GitHub мав понад 100 мільйонів сховищ. Репозиторій — це структура даних для зберігання документів, включаючи вихідний код програми. Репозиторій може відстежувати та підтримувати контроль версій. GitLab - це повноцінна платформа DevOps, що поставляється у вигляді єдиного додатка. GitLab надає доступ до сховищ Git, контрольованих керуванням вихідним кодом. За допомогою GitLab розробники можуть: співпрацювати, переглядати код, робити коментарі та допомагати покращувати код один одного. Робота з власної локальної копії коду. Код відгалуження та злиття, коли це потрібно. Оптимізуйте тестування та доставку за допомогою вбудованої безперервної інтеграції (CI) та безперервної доставки (CD). З цього відео ви дізналися: GitHub - це сервіс онлайн-хостингу для репозиторіїв Git. Репозиторії зберігають документи, включаючи вихідний код програми, і дозволяють учасникам відстежувати та підтримувати контроль версій. Що особливого в моделі Git Repository? Git розроблений як розподілена система контролю версій. В першу чергу орієнтована на відстеження вихідного коду під час розробки. Містить елементи для координації між програмістами, відстеження змін та підтримки нелінійних робочих процесів.